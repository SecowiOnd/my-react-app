{"version":3,"sources":["Components/Dialogs/Dialogs.module.css","Components/Dialogs/Message/Message.module.css","Components/Dialogs/DialogItem/DialogItem.jsx","Components/Dialogs/Message/Message.jsx","Components/Dialogs/AddMessageForm.jsx","Components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","Components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItems","props","path","id","className","s","dialog","src","photoUrl","to","activeClassName","active","name","Messages","markup","message","maxLength100","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Textarea","validate","requied","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","DialogItem","messagesElement","messages","m","Message","newMessageText","dialogsItems","classname","values","addMessage","mapStateToPropsFromRedirect","isAuth","auth","compose","connect","dispatch","addMessageCreator","Component","RedirectComponent","this","React"],"mappings":"qGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,WAAa,4BAA4B,OAAS,0B,oBCA7PD,EAAOC,QAAU,CAAC,OAAS,wBAAwB,QAAU,yBAAyB,WAAa,8B,+FCiBpFC,EAbK,SAACC,GACjB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACI,yBAAKC,UAAWC,IAAEC,QACd,6BACI,yBAAKC,IAAKN,EAAMO,YAEpB,kBAAC,IAAD,CAASC,GAAIP,EAAMQ,gBAAiBL,IAAEM,QAASV,EAAMW,Q,kBCAlDC,EAVE,SAACZ,GACd,OACI,yBAAKG,UAAWC,IAAES,QACd,yBAAKV,UAAWC,IAAEU,SACbd,EAAMc,W,iCCFjBC,EAAeC,YAAiB,KAkBvBC,EAFaC,YAAU,CAAEC,KAAM,wBAAlBD,EAdL,SAAClB,GAEpB,OACI,0BAAMoB,SAAUpB,EAAMqB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,YAAY,qBAAqBZ,KAAK,iBAAiBa,UAAWC,IACzEC,SAAU,CAACC,IAASZ,MAExB,6BAAK,iDCsBFa,EA7BC,SAAC5B,GAEb,IAAI6B,EAAQ7B,EAAM8B,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAACC,EAAD,CAAaxB,KAAMuB,EAAEvB,KAAMT,GAAIgC,EAAEhC,GAAIK,SAAU2B,EAAE3B,cAC1F6B,EAAkBP,EAAMQ,SAASJ,KAAI,SAAAK,GAAC,OAAI,kBAACC,EAAD,CAAUzB,QAASwB,EAAExB,aAC9Ce,EAAMW,eAS3B,OACI,yBAAKrC,UAAWC,IAAE4B,SACd,yBAAK7B,UAAWC,IAAEqC,cACbV,GAEL,yBAAKW,UAAWtC,IAAEiC,UACd,wCACA,6BAAMD,GACN,kBAAC,EAAD,CAAqBhB,SAdb,SAACuB,GACjB3C,EAAM4C,WAAWD,EAAOH,sB,wDCd5BK,EAA8B,SAAChB,GAAD,MAAY,CAC1CiB,OAAQjB,EAAMkB,KAAKD,S,OCmCRE,sBACXC,aAdkB,SAACpB,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAIF,SAACoB,GACtB,MAAO,CACHN,WAAY,SAACJ,GAAqBU,EAASC,YAAkBX,UD3BrC,SAACY,GAAe,IACtCC,EADqC,iLAGnC,OAAKC,KAAKtD,MAAM8C,OACT,kBAACM,EAAcE,KAAKtD,OADI,kBAAC,IAAD,CAAUQ,GAAG,eAHT,GACX+C,IAAMH,WAStC,OAFqCH,YAAQJ,EAARI,CAAqCI,KCwB/DL,CACqDpB","file":"static/js/4.df7e9e40.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__T7T8z\",\"dialogsItems\":\"Dialogs_dialogsItems__3rX5w\",\"dialog\":\"Dialogs_dialog__3X3lt\",\"messages\":\"Dialogs_messages__3AvDi\",\"message\":\"Dialogs_message__3bGjR\",\"messageTwo\":\"Dialogs_messageTwo__1eRQU\",\"active\":\"Dialogs_active__2o6HI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"markup\":\"Message_markup__8Mt8l\",\"message\":\"Message_message__haRf9\",\"messageTwo\":\"Message_messageTwo__1euxN\"};","import React from 'react';\r\nimport s from \"./../Dialogs.module.css\";\r\nimport { BrowserRouter, NavLink } from 'react-router-dom';\r\n\r\n\r\nconst DialogItems = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return (\r\n        <div className={s.dialog}>\r\n            <div>\r\n                <img src={props.photoUrl} />\r\n            </div>\r\n            <NavLink to={path} activeClassName={s.active}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItems;","import React from 'react';\r\nimport s from \"./Message.module.css\";\r\n\r\nconst Messages = (props) => {\r\n    return (\r\n        <div className={s.markup}>\r\n            <div className={s.message}>\r\n                {props.message}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Messages;","import React from 'react';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { requied, maxLengthCreator} from '../../Utilites/validation/validators';\r\nimport { Textarea } from '../Common/FormsControls/FormsControls';\r\n\r\nconst maxLength100 = maxLengthCreator(100);\r\n\r\nconst AddMessageForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder=\"Enter your message\" name=\"newMessageText\" component={Textarea} \r\n                validate={[requied, maxLength100]}/>\r\n            </div>\r\n            <div><button>Add Post</button></div>\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({ form: 'dialogAddMessageForm' })(AddMessageForm)\r\n\r\nexport default AddMessageFormRedux;","import React from 'react';\r\nimport s from \"./Dialogs.module.css\";\r\nimport DialogItems from \"./DialogItem/DialogItem\";\r\nimport Messages from \"./Message/Message\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport AddMessageForm from './AddMessageForm';\r\nimport AddMessageFormRedux from './AddMessageForm';\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItems name={d.name} id={d.id} photoUrl={d.photoUrl} />);\r\n    let messagesElement = state.messages.map(m => <Messages message={m.message} />);\r\n    let newMessageText = state.newMessageText\r\n\r\n    \r\n    let addNewMessage = (values) => {\r\n        props.addMessage(values.newMessageText);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div classname={s.messages}>\r\n                <h4>Messages</h4>\r\n                <div>{messagesElement}</div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsFromRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/Login' />;\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsFromRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n\r\n}","import React from 'react';\r\nimport { addMessageCreator } from \"../../Redux/dialogs-reducer\"\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n// const DialogsContainer = (props) => {\r\n\r\n//     let state = props.store.getState().dialogsPage\r\n\r\n//     let addMessage = () => {\r\n//         props.store.dispatch(addMessageCreator());\r\n//     };\r\n\r\n//     let onMessageChange = (body) => {\r\n//         props.store.dispatch(updateNewMessageTextCreator(body));\r\n//     }\r\n\r\n//     return (\r\n//        <Dialogs \r\n//         addMessage={addMessage} \r\n//         updateNewMessageText={onMessageChange}\r\n//         dialogsPage={state}/>\r\n//     )\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (newMessageText) => { dispatch(addMessageCreator(newMessageText)); }\r\n    }\r\n};\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(Dialogs);"],"sourceRoot":""}